[{"/Users/kevinliaoo/Documents/Twittor/frontend/src/index.js":"1","/Users/kevinliaoo/Documents/Twittor/frontend/src/store.js":"2","/Users/kevinliaoo/Documents/Twittor/frontend/src/App.js":"3","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Login.jsx":"4","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Home.jsx":"5","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Layout.jsx":"6","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Register.jsx":"7","/Users/kevinliaoo/Documents/Twittor/frontend/src/config.js":"8","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Post.jsx":"9","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/NewPost.jsx":"10","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Header.jsx":"11","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Postslist.jsx":"12","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Navbar.jsx":"13","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Search.jsx":"14","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Profile.jsx":"15","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/LoadingComponent.jsx":"16","/Users/kevinliaoo/Documents/Twittor/frontend/src/utils/localStorage.js":"17","/Users/kevinliaoo/Documents/Twittor/frontend/src/utils/LocalStorage.js":"18","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/EditProfile.jsx":"19"},{"size":479,"mtime":1611166350836,"results":"20","hashOfConfig":"21"},{"size":1727,"mtime":1611793045443,"results":"22","hashOfConfig":"21"},{"size":893,"mtime":1611881972868,"results":"23","hashOfConfig":"21"},{"size":2714,"mtime":1612228549381,"results":"24","hashOfConfig":"21"},{"size":2241,"mtime":1611943146072,"results":"25","hashOfConfig":"21"},{"size":282,"mtime":1612224349451,"results":"26","hashOfConfig":"21"},{"size":3990,"mtime":1612226587011,"results":"27","hashOfConfig":"21"},{"size":1449,"mtime":1612319567309,"results":"28","hashOfConfig":"21"},{"size":4681,"mtime":1612356506028,"results":"29","hashOfConfig":"21"},{"size":2751,"mtime":1611942966750,"results":"30","hashOfConfig":"21"},{"size":1060,"mtime":1612319836264,"results":"31","hashOfConfig":"21"},{"size":1158,"mtime":1611862533125,"results":"32","hashOfConfig":"21"},{"size":1145,"mtime":1611858042921,"results":"33","hashOfConfig":"21"},{"size":1307,"mtime":1612233840975,"results":"34","hashOfConfig":"21"},{"size":6237,"mtime":1612359415327,"results":"35","hashOfConfig":"21"},{"size":140,"mtime":1611802011408,"results":"36","hashOfConfig":"21"},{"size":1328,"mtime":1612058422770,"results":"37","hashOfConfig":"21"},{"size":770,"mtime":1611843783786,"results":"38","hashOfConfig":"21"},{"size":4889,"mtime":1611942027089,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10os2eg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/kevinliaoo/Documents/Twittor/frontend/src/index.js",[],["82","83"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/store.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/App.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Login.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Home.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Layout.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Register.jsx",["84"],"import React, { useState, useEffect } from 'react'; \nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport config from '../config';\n\nimport '../assets/styles/pages/Login.css';\n\nconst Register = props => {\n    const [form, setValues] = useState({\n        firstName: '', \n        lastName: '', \n        username: '', \n        password: '', \n        repeatPsw: '',\n    })\n\n    const handleInput = event => {\n        setValues({\n            ...form, \n            [event.target.name]: event.target.value.trim(), \n        })\n    }\n    const goBack = () => props.history.push('/login');\n    const handleSubmit = event => {\n        event.preventDefault();\n        axios.post(`${config.host_URL}/api/users`, form)\n            .then(response => {\n                props.history.push('/login');\n                alert('User created succesfully')\n            })\n            .catch(e => {\n                // e.response.data.body\n                console.log(e.response.data.body)\n                alert('Error')\n            })\n    }\n    // Checks if all fields of the form is completed\n    const checkAllFieldsCompleted = () => {\n        const hasValue = Object.values(form).map(value => value.length > 0)\n        let res = 0; \n        hasValue.map(val => val===true ? res++ : '');\n        return res === 5;\n    }\n    useEffect(() => {\n        const registerButton = document.getElementById('registerbtn'); \n        if(checkAllFieldsCompleted()) {\n            registerButton.disabled = false; \n            registerButton.style.backgroundColor = config.colors.enabledButton; \n        } else {\n            registerButton.disabled = true; \n            registerButton.style.backgroundColor = config.colors.disabledButton;\n        }\n    }, [form])\n    return (\n        <>\n            <section className=\"formContainer\">\n                <h2 className=\"title\">Create your account</h2>\n                <form className=\"loginform\" onSubmit={handleSubmit}>\n                    <input \n                        className = 'loginform__input'\n                        type = \"text\"\n                        name = \"firstName\" \n                        placeholder = \"First name: \"\n                        onChange = {handleInput}\n                    />\n                    <input \n                        className = 'loginform__input'\n                        type = \"text\"\n                        name = \"lastName\" \n                        placeholder = \"Last name: \"\n                        onChange = {handleInput}\n                    />\n                    <input \n                        className = 'loginform__input'\n                        type = \"text\"\n                        name = \"username\" \n                        placeholder = \"Username: \"\n                        onChange = {handleInput}\n                    />\n                    <input \n                        className = 'loginform__input'\n                        type = \"password\"\n                        name = \"password\" \n                        placeholder = \"Password: \"\n                        onChange = {handleInput}\n                    />\n                    <input \n                        className = 'loginform__input'\n                        type = \"password\"\n                        name = \"repeatPsw\" \n                        placeholder = \"Repeat password: \"\n                        onChange = {handleInput}\n                    />\n                    <button className=\"loginform__submit\" id=\"registerbtn\">\n                        Register\n                    </button>\n                    <button className=\"loginform__cancelbtn\" onClick={goBack}>\n                        Cancel\n                    </button>\n                </form>\n            </section>\n        </>\n    )\n}\n\nconst mapDispatchesToProps = dispatch => ({\n    registerRequest(payload) {\n        dispatch({\n            type: 'REGISTER_REQUEST',\n            payload\n        })\n    }, \n}); \n\nexport default connect(null, mapDispatchesToProps)(Register);","/Users/kevinliaoo/Documents/Twittor/frontend/src/config.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Post.jsx",["85","86","87"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/NewPost.jsx",["88","89"],"import React from 'react'; \nimport axios from 'axios';\n\nimport config from '../config';\nimport localStorage from '../utils/localStorage';\n\nimport '../assets/styles/components/NewPost.css';\n\nclass NewPost extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {};\n        this.user = localStorage.getUser() || {};\n    }\n\n    componentDidMount() {\n        const twitButton = document.getElementById('twitbutton'); \n        twitButton.disabled = true;\n        twitButton.style.backgroundColor = config.colors.disabledButton;\n    }\n\n    handleClick() {\n        const input = document.getElementById('content__input'); \n        const user = localStorage.getUser();\n        const jwt = localStorage.getJwt()\n        const config_ = {\n            headers: { Authorization: `Bearer ${jwt}` }\n        }; \n        const bodyParameters = {\n            uid: user._id, \n            content: input.value\n        };\n        const URL = `${config.host_URL}/api/posts/`;\n        axios.post(URL, bodyParameters, config_)\n            .then(res => {\n                input.value = \"\"; \n                alert('New post posted');\n            })\n            .catch(e => console.log(e))\n    }\n\n    handleTextarea() {\n        const textarea = document.getElementById('content__input'); \n        const twitButton = document.getElementById('twitbutton'); \n        if(textarea.value.length > 0) {\n            twitButton.disabled = false;\n            twitButton.style.backgroundColor = config.colors.enabledButton;\n        } else {\n            twitButton.disabled = true;\n            twitButton.style.backgroundColor = config.colors.disabledButton;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"newpost\">\n                <div className=\"newpost__content\">\n                    <img \n                        className=\"newpost__profilepic\" \n                        src={this.user.profileURL || config.images_URLs.default_profile} \n                        alt=\"Profile picture\" \n                    />\n                    <textarea \n                        className = \"content__input\" \n                        id = \"content__input\"\n                        type = \"text\" \n                        placeholder = \"What do you want to say?\"\n                        onChange = {this.handleTextarea}\n                    />\n                </div>\n                <div className=\"buttons\">\n                    <button id=\"twitbutton\" className=\"twitbutton\" onClick={this.handleClick.bind(this)}>\n                        Twit\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    jwt: state.jwt,\n    user: state.user,\n})\n\nexport default NewPost;","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Header.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Postslist.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Navbar.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Search.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Profile.jsx",["90"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/LoadingComponent.jsx",[],["91","92"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/utils/localStorage.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/utils/LocalStorage.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/EditProfile.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":54,"column":8,"nodeType":"99","endLine":54,"endColumn":14,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":50,"column":11,"nodeType":"103","messageId":"104","endLine":50,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":70,"column":23,"nodeType":"107","messageId":"108","endLine":70,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":102,"column":25,"nodeType":"111","endLine":102,"endColumn":81},{"ruleId":"112","severity":1,"message":"113","line":58,"column":21,"nodeType":"111","endLine":62,"endColumn":23},{"ruleId":"101","severity":1,"message":"114","line":81,"column":7,"nodeType":"103","messageId":"104","endLine":81,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":84,"column":29,"nodeType":"111","endLine":88,"endColumn":31},{"ruleId":"93","replacedBy":"115"},{"ruleId":"95","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkAllFieldsCompleted'. Either include it or remove the dependency array.","ArrayExpression",["119"],"no-unused-vars","'goToPost' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'mapStateToProps' is assigned a value but never used.",["117"],["118"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [checkAllFieldsCompleted, form]",{"range":"122","text":"123"},[1738,1744],"[checkAllFieldsCompleted, form]"]