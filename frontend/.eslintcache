[{"/Users/kevinliaoo/Documents/Twittor/frontend/src/index.js":"1","/Users/kevinliaoo/Documents/Twittor/frontend/src/store.js":"2","/Users/kevinliaoo/Documents/Twittor/frontend/src/App.js":"3","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Login.jsx":"4","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Home.jsx":"5","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Layout.jsx":"6","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Register.jsx":"7","/Users/kevinliaoo/Documents/Twittor/frontend/src/config.js":"8","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Post.jsx":"9","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/NewPost.jsx":"10","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Header.jsx":"11","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Postslist.jsx":"12","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Navbar.jsx":"13","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Search.jsx":"14","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Profile.jsx":"15","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/LoadingComponent.jsx":"16","/Users/kevinliaoo/Documents/Twittor/frontend/src/utils/localStorage.js":"17","/Users/kevinliaoo/Documents/Twittor/frontend/src/utils/LocalStorage.js":"18","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/EditProfile.jsx":"19"},{"size":479,"mtime":1611166350836,"results":"20","hashOfConfig":"21"},{"size":1727,"mtime":1611793045443,"results":"22","hashOfConfig":"21"},{"size":893,"mtime":1611881972868,"results":"23","hashOfConfig":"21"},{"size":2624,"mtime":1611851186135,"results":"24","hashOfConfig":"21"},{"size":2241,"mtime":1611943146072,"results":"25","hashOfConfig":"21"},{"size":213,"mtime":1611159887251,"results":"26","hashOfConfig":"21"},{"size":3913,"mtime":1611848254353,"results":"27","hashOfConfig":"21"},{"size":1405,"mtime":1611879713544,"results":"28","hashOfConfig":"21"},{"size":3973,"mtime":1611941396920,"results":"29","hashOfConfig":"21"},{"size":2751,"mtime":1611942966750,"results":"30","hashOfConfig":"21"},{"size":403,"mtime":1611276051615,"results":"31","hashOfConfig":"21"},{"size":1158,"mtime":1611862533125,"results":"32","hashOfConfig":"21"},{"size":1145,"mtime":1611858042921,"results":"33","hashOfConfig":"21"},{"size":1260,"mtime":1611847956479,"results":"34","hashOfConfig":"21"},{"size":5943,"mtime":1611931131853,"results":"35","hashOfConfig":"21"},{"size":140,"mtime":1611802011408,"results":"36","hashOfConfig":"21"},{"size":1328,"mtime":1611930928834,"results":"37","hashOfConfig":"21"},{"size":770,"mtime":1611843783786,"results":"38","hashOfConfig":"21"},{"size":4889,"mtime":1611942027089,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10os2eg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevinliaoo/Documents/Twittor/frontend/src/index.js",[],["82","83"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/store.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/App.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Login.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Home.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Layout.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Register.jsx",["84"],"import React, { useState, useEffect } from 'react'; \nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport config from '../config';\n\nimport '../assets/styles/pages/Login.css';\n\nconst Register = props => {\n    const [form, setValues] = useState({\n        firstName: '', \n        lastName: '', \n        username: '', \n        password: '', \n        repeatPsw: '',\n    })\n\n    const handleInput = event => {\n        setValues({\n            ...form, \n            [event.target.name]: event.target.value.trim(), \n        })\n    }\n    const goBack = () => props.history.push('/login');\n    const handleSubmit = event => {\n        event.preventDefault();\n        axios.post(`${config.host_URL}/api/users`, form)\n            .then(response => {\n                props.history.push('/login');\n                alert('User created succesfully')\n            })\n            .catch(e => {\n                // e.response.data.body\n                console.log(e.response.data.body)\n                alert('Error')\n            })\n    }\n    // Checks if all fields of the form is completed\n    const checkAllFieldsCompleted = () => {\n        const hasValue = Object.values(form).map(value => value.length > 0)\n        let res = 0; \n        hasValue.map(val => val===true ? res++ : '');\n        return res === 5;\n    }\n    useEffect(() => {\n        const registerButton = document.getElementById('registerbtn'); \n        if(checkAllFieldsCompleted()) {\n            registerButton.disabled = false; \n            registerButton.style.backgroundColor = config.colors.enabledButton; \n        } else {\n            registerButton.disabled = true; \n            registerButton.style.backgroundColor = config.colors.disabledButton;\n        }\n    }, [form])\n    return (\n        <>\n            <section className=\"formContainer\">\n                <h2 className=\"title\">Create your account</h2>\n                <form className=\"form\" onSubmit={handleSubmit}>\n                    <input \n                        className = 'input'\n                        type = \"text\"\n                        name = \"firstName\" \n                        placeholder = \"First name: \"\n                        onChange = {handleInput}\n                    />\n                    <input \n                        className = 'input'\n                        type = \"text\"\n                        name = \"lastName\" \n                        placeholder = \"Last name: \"\n                        onChange = {handleInput}\n                    />\n                    <input \n                        className = 'input'\n                        type = \"text\"\n                        name = \"username\" \n                        placeholder = \"Username: \"\n                        onChange = {handleInput}\n                    />\n                    <input \n                        className = 'input'\n                        type = \"password\"\n                        name = \"password\" \n                        placeholder = \"Password: \"\n                        onChange = {handleInput}\n                    />\n                    <input \n                        className = 'input'\n                        type = \"password\"\n                        name = \"repeatPsw\" \n                        placeholder = \"Repeat password: \"\n                        onChange = {handleInput}\n                    />\n                    <button className=\"registerbtn\" id=\"registerbtn\">\n                        Register\n                    </button>\n                    <button className=\"cancelbtn\" onClick={goBack}>\n                        Cancel\n                    </button>\n                </form>\n            </section>\n        </>\n    )\n}\n\nconst mapDispatchesToProps = dispatch => ({\n    registerRequest(payload) {\n        dispatch({\n            type: 'REGISTER_REQUEST',\n            payload\n        })\n    }, \n}); \n\nexport default connect(null, mapDispatchesToProps)(Register);","/Users/kevinliaoo/Documents/Twittor/frontend/src/config.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Post.jsx",["85","86"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/NewPost.jsx",["87","88"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Header.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Postslist.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Navbar.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Search.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Profile.jsx",["89"],"import React from 'react'; \nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport Navbar from '../components/Navbar'; \nimport Search from '../components/Search';\nimport Postslist from '../components/Postslist';\n\nimport config from '../config';\nimport localStorage from '../utils/localStorage.js';\n\nimport '../assets/styles/pages/Profile.css';\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        try {\n            localStorage.reloadUserdata(); \n            localStorage.reloadSearchUser();\n        } catch(e) {\n            localStorage.deleteJwt();\n            localStorage.deleteUser();\n            this.props.history.push('/login');\n        }\n        this.state = {};\n        this.searchUser = localStorage.getSearchUser();\n        this.user = localStorage.getUser();\n        this.posts = [];\n        this.isFollowing = this.searchUser.followers.includes(this.user._id);\n    }\n    componentDidMount() {\n        const URL = `${config.host_URL}/api/posts/${this.searchUser._id}`; \n        axios.get(URL)\n            .then(response => {\n                this.posts = response.data.body; \n                this.setState({});\n            })\n            .catch(err => console.log(err));\n    }\n    toggleFollow() {\n        const config_ = {\n            headers: { Authorization: `Bearer ${localStorage.getJwt()}` }\n        }; \n        const bodyParameters = {\n            uid: this.user._id, \n        };\n        if(this.isFollowing) {\n            const URL = `${config.host_URL}/api/users/unfollow/${this.searchUser._id}`\n            axios.patch(URL, bodyParameters, config_)\n                .then(() => window.location.reload())\n                .catch(() => alert('Error'))\n        } else {\n            const URL = `${config.host_URL}/api/users/follow/${this.searchUser._id}`\n            axios.patch(URL, bodyParameters, config_)\n                .then(() => {\n                    // Recargar la pagina \n                    this.render()\n                })\n                .catch(() => alert('Error'))\n        }\n    }\n    editProfile() {\n        this.props.history.push('/editprofile');\n    }\n    render() {\n        return (\n            <div className=\"homepage__content\">\n                <div className=\"left\">\n                    <Navbar />\n                </div>\n                <div className=\"middle--profile\">\n                    <div className=\"content__header\">\n                        <Link to=\"/\">\n                            <img className=\"arrowimg\" src={config.images_URLs.arrow} alt=\"Prev\" />\n                        </Link>\n                        <div className=\"userinfo\">\n                            <p className=\"userinfo__name\">{`${this.searchUser.firstName} ${this.searchUser.lastName}`}</p>\n                            <p className=\"userinfo__postscount\">{`${this.posts.length} posts`}</p>\n                        </div>\n                    </div>\n                    <div className=\"profilecontent\">\n                        <img \n                            src={this.searchUser.portraitURL || config.images_URLs.default_portrait} \n                            alt=\"Portrait image\" \n                            className=\"portrait\"\n                        />\n                        <div className=\"userprofile\">\n                            <div className=\"image_and_button\">\n                                <img \n                                    src={this.searchUser.profileURL || config.images_URLs.default_profile} \n                                    alt=\"User's profile pictire\" \n                                    className=\"userprofile__profilepicture\"\n                                />\n                                {\n                                    this.user._id === this.searchUser._id ? \n                                        <button className=\"followBtn\" onClick={this.editProfile.bind(this)}>\n                                            Edit\n                                        </button> :\n                                        <button className=\"followBtn\" onClick={this.toggleFollow.bind(this)} >\n                                            {\n                                                this.isFollowing ? \n                                                \"Unfollow\" : \n                                                \"Follow\"\n                                            }\n                                        </button>\n                                } \n                            </div>\n                            <div className=\"userprofile__userinfo\">\n                                <p className=\"userinfo__name\">{`${this.searchUser.firstName} ${this.searchUser.lastName}`}</p>\n                                <p className=\"userprofile__username\">{`@${this.searchUser.username}`}</p>\n                                <p className=\"userprofile__bio\">{this.searchUser.bio}</p>\n                                <div className=\"userprofile__follows\">\n                                    <p className=\"follow\">{`${this.searchUser.following.length} Following`}</p>\n                                    <p className=\"userprofile__dot\"> · </p>\n                                    <p className=\"follow\">{`${this.searchUser.followers.length} Followers`}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Postslist>\n                        {this.posts}\n                    </Postslist>\n                </div>\n                <div className=\"right\">\n                    <Search>\n                        {this.props}\n                    </Search>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    searchUser: state.searchUser,\n    user: state.user,\n    posts: state.posts,\n});\n\nexport default connect(mapStateToProps, null)(Profile);","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/LoadingComponent.jsx",[],["90","91"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/utils/localStorage.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/utils/LocalStorage.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/EditProfile.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":54,"column":8,"nodeType":"98","endLine":54,"endColumn":14,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":48,"column":11,"nodeType":"102","messageId":"103","endLine":48,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":78,"column":25,"nodeType":"106","endLine":78,"endColumn":81},{"ruleId":"107","severity":1,"message":"108","line":58,"column":21,"nodeType":"106","endLine":62,"endColumn":23},{"ruleId":"100","severity":1,"message":"109","line":81,"column":7,"nodeType":"102","messageId":"103","endLine":81,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":83,"column":25,"nodeType":"106","endLine":87,"endColumn":27},{"ruleId":"92","replacedBy":"110"},{"ruleId":"94","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkAllFieldsCompleted'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'goToPost' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'mapStateToProps' is assigned a value but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [checkAllFieldsCompleted, form]",{"range":"117","text":"118"},[1738,1744],"[checkAllFieldsCompleted, form]"]