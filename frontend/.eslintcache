[{"/Users/kevinliaoo/Documents/Twittor/frontend/src/index.js":"1","/Users/kevinliaoo/Documents/Twittor/frontend/src/store.js":"2","/Users/kevinliaoo/Documents/Twittor/frontend/src/App.js":"3","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Login.jsx":"4","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Home.jsx":"5","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Layout.jsx":"6","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Register.jsx":"7","/Users/kevinliaoo/Documents/Twittor/frontend/src/config.js":"8","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Post.jsx":"9","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/NewPost.jsx":"10","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Header.jsx":"11","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Postslist.jsx":"12","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Navbar.jsx":"13","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Search.jsx":"14","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Profile.jsx":"15"},{"size":479,"mtime":1611166350836,"results":"16","hashOfConfig":"17"},{"size":1317,"mtime":1611753890457,"results":"18","hashOfConfig":"17"},{"size":766,"mtime":1611412945764,"results":"19","hashOfConfig":"17"},{"size":2958,"mtime":1611753332867,"results":"20","hashOfConfig":"17"},{"size":999,"mtime":1611713108834,"results":"21","hashOfConfig":"17"},{"size":213,"mtime":1611159887251,"results":"22","hashOfConfig":"17"},{"size":3906,"mtime":1611753592117,"results":"23","hashOfConfig":"17"},{"size":919,"mtime":1611708026759,"results":"24","hashOfConfig":"17"},{"size":1774,"mtime":1611274389461,"results":"25","hashOfConfig":"17"},{"size":1826,"mtime":1611278604115,"results":"26","hashOfConfig":"17"},{"size":403,"mtime":1611276051615,"results":"27","hashOfConfig":"17"},{"size":666,"mtime":1611705360711,"results":"28","hashOfConfig":"17"},{"size":629,"mtime":1611277644320,"results":"29","hashOfConfig":"17"},{"size":633,"mtime":1611279659811,"results":"30","hashOfConfig":"17"},{"size":2103,"mtime":1611416815465,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10os2eg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"/Users/kevinliaoo/Documents/Twittor/frontend/src/index.js",[],["67","68"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/store.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/App.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Login.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Home.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Layout.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Register.jsx",["69"],"/Users/kevinliaoo/Documents/Twittor/frontend/src/config.js",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Post.jsx",["70"],"import React from 'react'; \n\nimport config from '../config';\n\nimport '../assets/styles/components/Post.css';\n\nconst Post = props => {\n    const goToPost = ev => {\n\n    }\n    const likePost = ev => {\n        console.log(\"Send like request\")\n    }\n    // El contenido de cada post dsps lo tengo que cambiar cuando pueda hacer peticiones\n    return(\n        <>\n            <div className=\"postcontent\">\n                <div className=\"maincontent\">\n                    <div className=\"maincontent__image\">\n                        <img className=\"profilepicture\" src={props.pictureURL}/>\n                    </div>\n                    <div className=\"separator\">\n                        <div className=\"maincontent__maindata\">\n                            <p className=\"name\">{`${props.firstName} ${props.lastName}`}</p>\n                            <p className=\"username\">{`@${props.username} Â·`}</p> \n                            <p className=\"time\">21mins</p>\n                        </div>  \n                        <div className=\"maincontent__content\">\n                            {props.content}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"postactions\">\n                    <div className=\"like\" onClick={likePost}>\n                        <img src={config.images_URLs.like} alt=\"Like button\" />\n                        <p className=\"likesnumber\">6</p>\n                    </div>\n                    <div className=\"comment\" onClick={goToPost}>\n                        <img src={config.images_URLs.comments} alt=\"Comment button\" />\n                        <p className=\"commentsnumbers\">9</p>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Post;","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/NewPost.jsx",["71"],"import React from 'react'; \n\nimport config from '../config';\n\nimport '../assets/styles/components/NewPost.css';\n\nclass NewPost extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {};\n    }\n\n    componentDidMount() {\n        const twitButton = document.getElementById('twitbutton'); \n        twitButton.disabled = true;\n        twitButton.style.backgroundColor = config.colors.disabledButton;\n    }\n\n    handleClick() {\n        console.log(\"Button clicked\")\n    }\n\n    handleTextarea() {\n        const textarea = document.getElementById('content__input'); \n        const twitButton = document.getElementById('twitbutton'); \n        if(textarea.value.length > 0) {\n            twitButton.disabled = false;\n            twitButton.style.backgroundColor = config.colors.enabledButton;\n        } else {\n            twitButton.disabled = true;\n            twitButton.style.backgroundColor = config.colors.disabledButton;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"newpost\">\n                <div className=\"newpost__content\">\n                    <img className=\"newpost__profilepic\" src={config.images_URLs.user} alt=\"Profile picture\" />\n                    <textarea \n                        className = \"content__input\" \n                        id = \"content__input\"\n                        type = \"text\" \n                        placeholder = \"What do you want to say?\"\n                        onChange = {this.handleTextarea}\n                    />\n                </div>\n                <div className=\"buttons\">\n                    <button id=\"twitbutton\" className=\"twitbutton\" onClick={this.handleClick}>\n                        Twit\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewPost; ","/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Header.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Postslist.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Navbar.jsx",[],"/Users/kevinliaoo/Documents/Twittor/frontend/src/components/Search.jsx",["72"],"import React from 'react'; \nimport { Link } from 'react-router-dom';\n\nimport config from '../config';\n\nimport '../assets/styles/components/Search.css';\n\nconst Search = () => {\n    return (\n        <div className=\"searchsection\">\n            <form className=\"searchbar\">\n                <input \n                    className = \"searchuser\"\n                    placeholder = \"Search on Twittor\"\n                /> \n                <button>\n                    <img className=\"searchbutton\" src={config.images_URLs.search} alt=\"Search icon\" />\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default Search;","/Users/kevinliaoo/Documents/Twittor/frontend/src/pages/Profile.jsx",["73"],"import React from 'react'; \nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Navbar from '../components/Navbar'; \nimport Search from '../components/Search';\nimport Postslist from '../components/Postslist';\n\nimport config from '../config';\n\nimport '../assets/styles/pages/Profile.css';\n\nconst Profile = props => {\n    const { user, posts } = props;\n    return (\n        <div className=\"homepage__content\">\n            <div className=\"left\">\n                <Navbar />\n            </div>\n            <div className=\"middle--profile\">\n                <div className=\"content__header\">\n                    <Link to=\"/\">\n                        <img className=\"arrowimg\" src={config.images_URLs.arrow} alt=\"Prev\" />\n                    </Link>\n                    <div className=\"userinfo\">\n                        <p className=\"userinfo__name\">{`${user.firstName} ${user.lastName}`}</p>\n                        <p className=\"userinfo__postscount\">{`${posts.length} posts`}</p>\n                    </div>\n                </div>\n                <div className=\"profilecontent\">\n                    <img src={user.portraitimg} alt=\"Portrait image\" className=\"portrait\"/>\n                    <div className=\"userprofile\">\n                        <img src={user.profilepic} alt=\"\" className=\"userprofile__profilepicture\"/>\n                        <div className=\"userprofile__userinfo\">\n                            <p className=\"userinfo__name\">{`${user.firstName} ${user.lastName}`}</p>\n                            <p className=\"userprofile__username\">{`@${user.username}`}</p>\n                            <p>{`${user.following.length} Following  ${user.followers.length} Followers`}</p>\n                        </div>\n                    </div>\n                </div>\n                <Postslist />\n            </div>\n            <div className=\"right\">\n                <Search />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.searchUser,\n    posts: state.posts,\n});\n\nexport default connect(mapStateToProps, null)(Profile);",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":54,"column":8,"nodeType":"80","endLine":54,"endColumn":14,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":20,"column":25,"nodeType":"84","endLine":20,"endColumn":81},{"ruleId":"85","severity":1,"message":"86","line":39,"column":21,"nodeType":"84","endLine":39,"endColumn":112},{"ruleId":"87","severity":1,"message":"88","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":31,"column":21,"nodeType":"84","endLine":31,"endColumn":92},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkAllFieldsCompleted'. Either include it or remove the dependency array.","ArrayExpression",["93"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donât need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [checkAllFieldsCompleted, form]",{"range":"96","text":"97"},[1731,1737],"[checkAllFieldsCompleted, form]"]